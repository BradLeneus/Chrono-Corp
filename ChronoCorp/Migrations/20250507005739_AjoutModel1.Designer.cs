// <auto-generated />
using System;
using ChronoCorp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ChronoCorp.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250507005739_AjoutModel1")]
    partial class AjoutModel1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("ChronoCorp.Model.CedulePointage", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("HeureDebut")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("HeureFin")
                        .HasColumnType("datetime(6)");

                    b.Property<long>("IdEmployee")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsPause")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.ToTable("CedulePointage");
                });

            modelBuilder.Entity("ChronoCorp.Model.CeduleQuart", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("HeureDebut")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("HeureFin")
                        .HasColumnType("datetime(6)");

                    b.Property<long>("IdCreateur")
                        .HasColumnType("bigint");

                    b.Property<long>("IdEmployee")
                        .HasColumnType("bigint");

                    b.Property<int>("TypeQuart")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CeduleQuart");
                });

            modelBuilder.Entity("ChronoCorp.Model.DemandeConge", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Commentaire")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DateDebut")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateFin")
                        .HasColumnType("datetime(6)");

                    b.Property<bool?>("EstApprouve")
                        .HasColumnType("tinyint(1)");

                    b.Property<long>("IdDestinataire")
                        .HasColumnType("bigint");

                    b.Property<long>("IdEmetteur")
                        .HasColumnType("bigint");

                    b.Property<string>("Reponse")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("TempsModif")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("TempsSoumission")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("TypeQuart")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("DemandeConge");
                });

            modelBuilder.Entity("ChronoCorp.Model.Employee", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("AdresseLigne1")
                        .HasColumnType("longtext");

                    b.Property<string>("AdresseLigne2")
                        .HasColumnType("longtext");

                    b.Property<float?>("ArgentGagneTotal")
                        .HasColumnType("float");

                    b.Property<string>("CodePostal")
                        .HasColumnType("longtext");

                    b.Property<string>("ContactUrgenceNom")
                        .HasColumnType("longtext");

                    b.Property<string>("ContactUrgenceTel")
                        .HasColumnType("longtext");

                    b.Property<string>("Courriel")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DateEmbauche")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateNaissance")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Departement")
                        .HasColumnType("longtext");

                    b.Property<bool>("EstActif")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("IdSuperieur")
                        .HasColumnType("int");

                    b.Property<float?>("NbrHeureConge")
                        .HasColumnType("float");

                    b.Property<float?>("NbrHeureTotal")
                        .HasColumnType("float");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Poste")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<float>("Salaire")
                        .HasColumnType("float");

                    b.Property<string>("Telephone")
                        .HasColumnType("longtext");

                    b.Property<string>("Ville")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("ChronoCorp.Model.EmployeeCredentials", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("IdEmployee")
                        .HasColumnType("bigint");

                    b.Property<string>("Mdp")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("EmployeeCredentials");
                });

            modelBuilder.Entity("ChronoCorp.Model.FichePaie", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("DateDebut")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateFin")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DatePaie")
                        .HasColumnType("datetime(6)");

                    b.Property<long>("IdEmployee")
                        .HasColumnType("bigint");

                    b.Property<float>("Montant")
                        .HasColumnType("float");

                    b.Property<float>("NbrHeure")
                        .HasColumnType("float");

                    b.Property<float>("VacanceCumul")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("FichePaie");
                });

            modelBuilder.Entity("ChronoCorp.Model.Messagerie", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Contenu")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long>("IdDestinataire")
                        .HasColumnType("bigint");

                    b.Property<long>("IdEmetteur")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Temps")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("TypeMessage")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Messagerie");
                });

            modelBuilder.Entity("ChronoCorp.Model.TypeQuart", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<bool>("EstConge")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<float>("TauxMajoration")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("TypeQuart");
                });
#pragma warning restore 612, 618
        }
    }
}
